#user www-data;
worker_processes 4;
#pid /var/run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

# Adapted the http block below from http://blog.argteam.com/coding/hardening-node-js-for-production-part-2-using-nginx-to-avoid-node-js-load/

http {
    #proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
    #proxy_temp_path /var/tmp;
    #include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    # (Importing the next block from the default nginx.conf file)
    include /etc/nginx/mime.types;
    types_hash_max_size 2048; 
    tcp_nopush on;
    tcp_nodelay on;
    access_log /var/log/nginx/access.log;
 
    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;
  
    upstream wynno_upstream {
      server 127.0.0.1:8080;
      #server 127.0.0.1:61338;
      keepalive 64;
    }
 
    server {
        listen 80;
        #listen 443 ssl;
 
        #ssl_certificate /some/location/sillyfacesociety.com.bundle.crt;
        #ssl_certificate_key /some/location/sillyfacesociety.com.key;
        #ssl_protocols        SSLv3 TLSv1;
        #ssl_ciphers HIGH:!aNULL:!MD5;
 
        server_name localhost; # Cf. https://library.linode.com/web-servers/nginx/configuration/basic
 
        #if ($host = 'sillyfacesociety.com' ) {
        #        rewrite  ^/(.*)$  http://www.sillyfacesociety.com/$1  permanent;
        #}
 
        error_page 503  /errors/unscheduled.html;
        error_page 404  /errors/404.html;
 
        location ~ ^/(images/|scripts/|styles/|views/|robots.txt|humans.txt|favicon.ico) {
          root /usr/local/dist/public;
          access_log off;
          expires max;
        }
 
        location /errors {
          internal;
          alias /usr/local/dist/public/views/errors;
        }
 
        location / {
          proxy_redirect off;
          proxy_set_header   X-Real-IP            $remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_set_header   Host                   $http_host;
          proxy_set_header   X-NginX-Proxy    true;
          proxy_set_header   Connection "";
          proxy_http_version 1.1;
          #proxy_cache one;
          #proxy_cache_key sfs$request_uri$scheme;
          proxy_pass         http://wynno_upstream;
        }
    }
}