---

- name: Install pip required for Ansible pip module
  apt: pkg=python-pip state=present
  sudo: yes

- name: Install virtualenv required for Ansible pip module if we ever want to use virtualenv
  apt: pkg=python-virtualenv state=present
  sudo: yes

- name: Install build-essential required for PyMongo
  apt: pkg=build-essential state=present
  sudo: yes

- name: Install python-dev required for PyMongo
  apt: pkg=python-dev state=present
  sudo: yes

  # Install MongoDB
- name: Import the public key for MongoDB used by the package management system
  shell: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10

- name: Create a list file for MongoDB
  shell: echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list

- name: Update apt
  apt: update_cache=yes
  sudo: yes

- name: Install MongoDB
  apt: pkg=mongodb-org=2.6.0 state=present
  sudo: yes

- name: Create db directory
  command: mkdir /home/deploy/db

- name: Create data directory within /db
  command: mkdir /home/deploy/db/data

- name: Make mongod:mongod the owner of /db/data
  command: chown mongod:mongod /home/deploy/db/data
  sudo: yes

- name: Install PyMongo which is required for mongodb_user tasks below
  pip: name=pymongo

- name: Create the master mongo user who creates other user accounts
  mongodb_user: database=admin user={{ master_user }} password={{ master_user_password }} roles='userAdminAnyDatabase'

- name: Create the user used by the app to read and write
  mongodb_user: database=wynno-{{ app_env }} login_user={{ master_user }} login_password={{ master_user_password }} user={{ app_db_user }} password={{ app_db_user_password }}
  notify: Stop mongo

- name: Launch mongo with authentication enabled and path to db
  shell: mongod --auth --dbpath ~/db/data

# RIGHT NOW IT SEEMS WE NEED TO HARDCODE THE OPENING OF THE FIREWALL FROM AS MANY
# NODE SERVERS AND PYTHON SERVERS WE HAVE. THIS IS NOT IDEAL IF THE NUMBER OF
# THOSE SERVERS GROWS. SOLUTION MAY BE TO USE A TEMPLATE CONFIG FILE FOR UFW? TEMPLATE
# FILES ALLOW LOOPING OVER GROUP SERVERS
# OR ELSE SOLUTION MAY BE TO USE ONE LINE TO OPEN UP TO A GROUP OF PRIVATE IPS
# FOR MY SERVERS, IF THAT IS POSSIBLE
- name: Open up mongo_port for db connections from node1
  command: ufw allow proto tcp from {{ hostvars['node1']['ansible_eth1']['ipv4']['address'] }} port {{ mongo_port }}
  sudo: yes

- name: Open up mongo_port for db connections from node2
  command: ufw allow proto tcp from {{ hostvars['node2']['ansible_eth1']['ipv4']['address'] }} port {{ mongo_port }}
  sudo: yes

- name: Open up mongo_port for db connections from python1
  command: ufw allow proto tcp from {{ hostvars['python1']['ansible_eth1']['ipv4']['address'] }} port {{ mongo_port }}
  sudo: yes

- name: Reload ufw to enable the new settings
  command: ufw reload
  sudo: yes
